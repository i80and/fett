# Derived from the Mustache spec: https://github.com/mustache/spec
overview: |
  All tags SHOULD be treated as standalone when appropriate.
tests:
  - name: Truthy
    desc: Truthy conditionals should have their contents rendered.
    data: { boolean: true }
    template: '"{{if boolean}}This should be rendered.{{end}}"'
    expected: '"This should be rendered."'

  - name: Falsey
    desc: Falsey conditionals should have their contents omitted.
    data: { boolean: false }
    template: '"{{if boolean}}This should not be rendered.{{end}}"'
    expected: '""'

  - name: List
    desc: Lists should be iterated
    data: { list: [ { item: 1 }, { item: 2 }, { item: 3 } ] }
    template: '"{{for item in list}}{{item.item}}{{end}}"'
    expected: '"123"'

  - name: Empty List
    desc: Empty lists should behave like falsey values.
    data: { list: [ ] }
    template: '"{{for item in list}}Yay lists!{{end}}"'
    expected: '""'

  - name: Doubled
    desc: Multiple sections per template should be permitted.
    data: { bool: true, two: 'second' }
    template: |
      {{if bool}}
      * first
      {{end}}
      * {{two}}
      {{if bool}}
      * third
      {{end}}
    expected: |
      * first
      * second
      * third

  - name: Nested (Truthy)
    desc: Nested truthy sections should have their contents rendered.
    data: { bool: true }
    template: "| A {{if bool}}B {{if bool}}C{{end}} D{{end}} E |"
    expected: "| A B C D E |"

  - name: Nested (Falsey)
    desc: Nested falsey sections should be omitted.
    data: { bool: false }
    template: "| A {{if bool}}B {{if bool}}C{{end}} D{{end}} E |"
    expected: "| A  E |"

  - name: Nested If within For
    desc: If block nested within For block
    data: {'customers': [{'name': 'Bob'}, {'name': 'Elvis'}, {'name': 'Judy'}]}
    template: |
      {{ for customer in customers }}
      {{ if i even }}
      Even: {{ customer.name }}
      {{ else }}
      Odd: {{ customer.name }}
      {{ end }}
      {{ else }}
      No customers :(
      {{ end }}
    expected: "Even: Bob\nOdd: Elvis\nEven: Judy\n"

  - name: Context Misses
    desc: Failed context lookups should be considered falsey.
    data: { }
    template: "[{{if missing}}Found key 'missing'!{{end}}]"
    expected: "[]"

  - name: Loop Else
    desc: If a loop is not executed, its 'else' block should be rendered.
    data: { list: [] }
    template: "{{for x in list}}{{else}}nada{{end}}"
    expected: "nada"

  - name: Empty1
    desc: Empty formats should return an empty string.
    data: { }
    template: '{{}}'
    expected: ''

  - name: Empty2
    desc: Empty formats should return an empty string.
    data: { }
    template: '{{ }}'
    expected: ''

  - name: Format
    desc: Allows a template to substitute a value referred to by another value.
    data: { x: { y: "\n" }, text: "Foo {{  x.y }} bar" }
    template: '  {{ format text }}'
    expected: "  Foo \n   bar"

  - name: FormatFilter
    desc: Filters should work with the format tag.
    data: { list: [1, 2, 3, 4, 5], text: "{{ list inc car cdr cdr }}" }
    template: '{{ format text }}'
    expected: '4'

  - name: FormatEmpty1
    desc: Empty formats should return an empty string.
    data: { text: "{{}}" }
    template: '{{ format text }}'
    expected: ''

  - name: FormatEmpty2
    desc: Empty formats should return an empty string.
    data: { text: "{{ }}" }
    template: '{{ format text }}'
    expected: ''

  - name: FormatLoop
    desc: The format tag should NOT work with loop counters (because "i" shadows the input object).
    data: { list: ['a', 'b', 'c'], '1': 'z', '2': 'x', '3': 'c' }
    template: '{{for x in list}}{{format i}}{{end}}'
    expected: '012'

  # Dotted Names

  - name: Dotted Names - Truthy
    desc: Dotted names should be valid for Section tags.
    data: { a: { b: { c: true } } }
    template: '"{{if a.b.c}}Here{{end}}" == "Here"'
    expected: '"Here" == "Here"'

  - name: Dotted Names - Falsey
    desc: Dotted names should be valid for Section tags.
    data: { a: { b: { c: false } } }
    template: '"{{if a.b.c}}Here{{end}}" == ""'
    expected: '"" == ""'

  - name: Dotted Names - Broken Chains
    desc: Dotted names that cannot be resolved should be considered falsey.
    data: { a: { } }
    template: '"{{if a.b.c}}Here{{end}}" == ""'
    expected: '"" == ""'

  # Whitespace Sensitivity

  - name: Surrounding Whitespace
    desc: Sections should not alter surrounding whitespace.
    data: { boolean: true }
    template: " | {{if boolean}}\t|\t{{end}} | \n"
    expected: " | \t|\t | \n"

  - name: Internal Whitespace
    desc: Sections should not alter internal whitespace.
    data: { boolean: true }
    template: " | {{if boolean}} {{# Important Whitespace }}\n {{end}} | \n"
    expected: " |  \n  | \n"

  - name: Indented Inline Sections
    desc: Single-line sections should not alter surrounding whitespace.
    data: { boolean: true }
    template: " {{if boolean}}YES{{end}}\n {{if boolean}}GOOD{{end}}\n"
    expected: " YES\n GOOD\n"

  - name: Standalone Lines
    desc: Standalone lines should be removed from the template.
    data: { boolean: true }
    template: |
      | This Is
      {{if boolean}}
      |
      {{end}}
      | A Line
    expected: |
      | This Is
      |
      | A Line

  - name: Indented Standalone Lines
    desc: Indented standalone lines should be removed from the template.
    data: { boolean: true }
    template: |
      | This Is
        {{if boolean}}
      |
        {{end}}
      | A Line
    expected: |
      | This Is
      |
      | A Line

  - name: Standalone Line Endings
    desc: '"\r\n" should be considered a newline for standalone tags.'
    data: { boolean: true }
    template: "|\r\n{{if boolean}}\r\n{{end}}\r\n|"
    expected: "|\r\n|"

  - name: Standalone Without Previous Line
    desc: Standalone tags should not require a newline to precede them.
    data: { boolean: true }
    template: "  {{if boolean}}\n#{{end}}\n/"
    expected: "#\n/"

  - name: Standalone Without Newline
    desc: Standalone tags should not require a newline to follow them.
    data: { boolean: true }
    template: "#{{if boolean}}\n/\n  {{end}}"
    expected: "#\n/\n"

  - name: Loop Counter
    desc: Loop structures have an "i" variable giving the loop iteration.
    data: { list: ['a', 'b', 'c'] }
    template: "{{for x in list}}{{x}}:{{i}} {{end}}"
    expected: "a:0 b:1 c:2 "

  - name: Loop Counter Outside Loop
    desc: ...but "i" should NOT exist without a loop.
    data: { i: 1 }
    template: "{{i}}"
    expected: "1"

  # Whitespace Insensitivity

  - name: Padding
    desc: Superfluous in-tag whitespace should be ignored.
    data: { boolean: true }
    template: '|{{  if boolean }}={{   end }}|'
    expected: '|=|'

  - name: Empty Block
    desc: Empty blocks should be no-ops.
    data: { boolean: true }
    template: "{{if boolean}}{{end}}"
    expected: ""

  - name: Indentation
    desc: Each line of substituted text should be properly indented.
    data: { text: "foo\nbar\nbaz" }
    template: "    {{text}} {{text}}"
    expected: "    foo\n    bar\n    baz foo\n    bar\n    baz"
